{"version":3,"sources":["webpack:///./js/api.js","webpack:///./js/refs.js","webpack:///./js/toggle-classlist.js","webpack:///./index.js"],"names":["axios","defaults","baseURL","setToken","token","headers","common","signUp","userData","post","response","data","login","logout","addContact","payload","getContacts","get","deleteContact","id","delete","updateContact","fields","patch","refs","formSignUp","document","querySelector","btnSignUp","btnLogin","btnLogout","name","email","contactForm","contactList","content","toggleClassList","inputName","btnFormSignup","btnFormLogin","onClickBtnSignup","this","classList","remove","add","onClickBtnLogin","onClickBtnLogout","allContacts","signupHandler","event","preventDefault","userDataSignup","target","elements","name_signup","value","email_signup","password","psw_signup","then","user","textContent","reset","catch","error","alert","loginFunc","loginHandler","userDataLogin","render","console","log","btnsDelete","btnsUpdate","contacts","map","contact","number","join","innerHTML","insertAdjacentHTML","querySelectorAll","forEach","btnDelete","addEventListener","btnDeleteContactHandler","btnUpdate","contactForAddId","dataset","selectedContact","find","formUpdate","updateName","updateNumber","contactName","contactNumber","btnSave","newName","newNumber","btnUpdateHandler","contactForDeleteId","filter","message","removeEventListener","push"],"mappings":"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","file":"main.d64f9629d63b768cebae.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\nconst setToken = token => {\r\n  axios.defaults.headers.common['Authorization'] = token;\r\n};\r\n\r\n/* ==================== async/await ==================== */\r\nexport const signUp = async userData => {\r\n  try {\r\n    const response = await axios.post('/users/signup', userData);\r\n    const data = await response.data;\r\n    setToken(data.token);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const login = async userData => {\r\n  try {\r\n    const response = await axios.post('/users/login', userData);\r\n    const data = await response.data;\r\n    setToken(data.token);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const response = await axios.post('/users/logout');\r\n\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addContact = async payload => {\r\n  try {\r\n    const response = await axios.post('/contacts', payload);\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const response = await axios.get('/contacts');\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteContact = async id => {\r\n  try {\r\n    const response = await axios.delete(`/contacts/${id}`);\r\n\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateContact = async (id, fields) => {\r\n  try {\r\n    const response = await axios.patch(`/contacts/${id}`, fields);\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* ==================== axios ==================== */\r\n// export const signUp = userData =>\r\n//   axios.post('/users/signup', userData).then(({ data }) => {\r\n//     setToken(data.token);\r\n\r\n//     return data;\r\n//   });\r\n\r\n// export const login = userData =>\r\n//   axios.post('/users/login', userData).then(({ data }) => {\r\n//     setToken(data.token);\r\n\r\n//     return data;\r\n//   });\r\n\r\n// export const logout = () => axios.post('/users/logout');\r\n\r\n// export const addContact = payload =>\r\n//   axios.post('/contacts', payload).then(({ data }) => data);\r\n\r\n// export const getContacts = () =>\r\n//   axios.get('/contacts').then(({ data }) => data);\r\n\r\n// export const deleteContact = id => axios.delete(`/contacts/${id}`);\r\n\r\n// export const updateContact = (id, fields) =>\r\n//   axios.patch(`/contacts/${id}`, fields).then(({ data }) => data);\r\n\r\n/* ==================== CRUD ==================== */\r\n// let token = '';\r\n// const setToken = loadedToken => (token = loadedToken);\r\n\r\n// const baseUrl = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\n// export const signUp = userData =>\r\n//   fetch(`${baseUrl}/users/signup`, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify(userData),\r\n//   })\r\n//     .then(res => res.json())\r\n//     .then(data => {\r\n//       setToken(data.token);\r\n\r\n//       return data;\r\n//     });\r\n\r\n// export const login = userData =>\r\n//   fetch(`${baseUrl}/users/login`, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify(userData),\r\n//   })\r\n//     .then(res => res.json())\r\n//     .then(data => {\r\n//       setToken(data.token);\r\n\r\n//       return data;\r\n//     });\r\n\r\n// export const logout = () =>\r\n//   fetch(`${baseUrl}/users/logout`, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: token,\r\n//     },\r\n//   }).then(res => res.json());\r\n\r\n// export const addContact = ({ name, number }) =>\r\n//   fetch(`${baseUrl}/contacts`, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: token,\r\n//     },\r\n//     body: JSON.stringify({ name, number }),\r\n//   }).then(res => res.json());\r\n\r\n// export const getContacts = () =>\r\n//   fetch(`${baseUrl}/contacts`, {\r\n//     headers: {\r\n//       Authorization: token,\r\n//     },\r\n//   }).then(res => res.json());\r\n\r\n// export const deleteContact = id =>\r\n//   fetch(`${baseUrl}/contacts/${id}`, {\r\n//     method: 'delete',\r\n//     headers: {\r\n//       Authorization: token,\r\n//     },\r\n//   }).then(res => res.json());\r\n\r\n// export const updateContact = (id, fields) =>\r\n//   fetch(`${baseUrl}/contacts/${id}`, {\r\n//     method: 'PATCH',\r\n//     headers: {\r\n//       'Content-Type': 'application/json; charset=UTF-8',\r\n//       Authorization: token,\r\n//     },\r\n//     body: JSON.stringify(fields),\r\n//   })\r\n//     .then(res => res.json())\r\n//     .then(console.log)\r\n//     .catch(error => console.log('error ', error));\r\n","const refs = {\r\n  formSignUp: document.querySelector('.form-signup'),\r\n\r\n  btnSignUp: document.querySelector('.signup'),\r\n  btnLogin: document.querySelector('.login'),\r\n  btnLogout: document.querySelector('.logout'),\r\n\r\n  name: document.querySelector('.name'),\r\n  email: document.querySelector('.email'),\r\n\r\n  contactForm: document.querySelector('.form'),\r\n  contactList: document.querySelector('.list'),\r\n  content: document.querySelector('.content'),\r\n};\r\n\r\nexport default refs;\r\n","import refs from './refs';\r\n\r\nconst toggleClassList = {\r\n  inputName: refs.formSignUp.querySelector('.input-name-signup'),\r\n  btnFormSignup: refs.formSignUp.querySelector('.btn-form-signup'),\r\n  btnFormLogin: refs.formSignUp.querySelector('.btn-form-login'),\r\n\r\n  onClickBtnSignup() {\r\n    this.inputName.classList.remove('is-hidden');\r\n    this.btnFormSignup.classList.remove('is-hidden');\r\n\r\n    refs.formSignUp.classList.remove('is-hidden');\r\n    refs.btnSignUp.classList.add('is-hidden');\r\n    refs.btnLogin.classList.add('is-hidden');\r\n  },\r\n\r\n  onClickBtnLogin() {\r\n    this.btnFormLogin.classList.remove('is-hidden');\r\n\r\n    refs.formSignUp.classList.remove('is-hidden');\r\n    refs.btnSignUp.classList.add('is-hidden');\r\n    refs.btnLogin.classList.add('is-hidden');\r\n  },\r\n\r\n  onClickBtnLogout() {\r\n    this.inputName.classList.add('is-hidden');\r\n    this.btnFormSignup.classList.add('is-hidden');\r\n    this.btnFormLogin.classList.add('is-hidden');\r\n    refs.content.classList.add('is-hidden');\r\n    refs.formSignUp.classList.add('is-hidden');\r\n    refs.btnSignUp.classList.remove('is-hidden');\r\n    refs.btnLogin.classList.remove('is-hidden');\r\n  },\r\n};\r\n\r\nexport default toggleClassList;\r\n","import './styles.css';\r\nimport {\r\n  signUp,\r\n  login,\r\n  logout,\r\n  addContact,\r\n  getContacts,\r\n  deleteContact,\r\n  updateContact,\r\n} from './js/api';\r\nimport refs from './js/refs';\r\nimport toggleClassList from './js/toggle-classlist';\r\n\r\nlet allContacts = [];\r\n\r\nrefs.btnSignUp.addEventListener('click', () => {\r\n  toggleClassList.onClickBtnSignup();\r\n\r\n  refs.formSignUp.addEventListener('submit', signupHandler);\r\n});\r\n\r\nrefs.btnLogin.addEventListener('click', () => {\r\n  toggleClassList.onClickBtnLogin();\r\n\r\n  refs.formSignUp.addEventListener('submit', loginHandler);\r\n});\r\n\r\nrefs.btnLogout.addEventListener('click', logOutHandler);\r\n\r\nrefs.contactForm.addEventListener('submit', contactFormHandler);\r\n\r\n/* ==================== CRUD ==================== */\r\nfunction signupHandler(event) {\r\n  event.preventDefault();\r\n\r\n  const nameSignup = event.target.elements.name_signup.value;\r\n  const emailSignup = event.target.elements.email_signup.value;\r\n  const pswSignup = event.target.elements.psw_signup.value;\r\n\r\n  const userDataSignup = {\r\n    name: nameSignup,\r\n    email: emailSignup,\r\n    password: pswSignup,\r\n  };\r\n\r\n  signUp(userDataSignup)\r\n    .then(({ user }) => {\r\n      refs.name.textContent = user.name;\r\n      refs.email.textContent = user.email;\r\n\r\n      refs.formSignUp.classList.add('is-hidden');\r\n      refs.content.classList.remove('is-hidden');\r\n\r\n      refs.formSignUp.reset();\r\n    })\r\n    .catch(error =>\r\n      error\r\n        ? alert(\r\n            'A user with the same email already exists! Please sign up with a different email!',\r\n          )\r\n        : loginFunc(userDataSignup),\r\n    );\r\n}\r\n\r\nfunction loginHandler(event) {\r\n  event.preventDefault();\r\n\r\n  const emailLogin = event.target.elements.email_signup.value;\r\n  const pswLogin = event.target.elements.psw_signup.value;\r\n\r\n  const userDataLogin = {\r\n    email: emailLogin,\r\n    password: pswLogin,\r\n  };\r\n\r\n  loginFunc(userDataLogin);\r\n}\r\n\r\nfunction loginFunc(userDataLogin) {\r\n  login(userDataLogin)\r\n    .then(({ user }) => {\r\n      refs.name.textContent = user.name;\r\n      refs.email.textContent = user.email;\r\n\r\n      refs.formSignUp.classList.add('is-hidden');\r\n      refs.content.classList.remove('is-hidden');\r\n\r\n      refs.formSignUp.reset();\r\n    })\r\n    .then(getContacts)\r\n    .then(data => (allContacts = data))\r\n    .then(render)\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nfunction logOutHandler() {\r\n  logout()\r\n    .then(data => {\r\n      if (data.message === 'Please authenticate') {\r\n        alert('Пожалуйста, войдите или зарегестрируйтесь');\r\n      }\r\n      // console.log(data);\r\n\r\n      refs.name.textContent = '';\r\n      refs.email.textContent = '';\r\n      refs.contactList.innerHTML = '';\r\n\r\n      toggleClassList.onClickBtnLogout();\r\n\r\n      refs.formSignUp.removeEventListener('submit', signupHandler);\r\n      refs.formSignUp.removeEventListener('submit', loginHandler);\r\n      // refs.formSignUp.reset();\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nfunction contactFormHandler(event) {\r\n  event.preventDefault();\r\n\r\n  let name = event.target.elements.name.value;\r\n  let number = event.target.elements.number.value;\r\n\r\n  const newContact = { name, number };\r\n\r\n  addContact(newContact)\r\n    .then(contact => allContacts.push(contact))\r\n    .then(render)\r\n    .then(() => {\r\n      refs.contactForm.reset();\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nfunction render() {\r\n  const contacts = allContacts\r\n    .map(contact => {\r\n      return `<li>\r\n    <span class=\"contact-name-${contact.id}\">${contact.name}</span>: <span class=\"contact-number-${contact.id}\">${contact.number}</span>\r\n    <button class=\"delete\" data-id=${contact.id}>Delete</button>\r\n    <button class=\"add\" data-id=${contact.id}>Update</button>\r\n    <div class=\"update-form-wrapper\" data-id=${contact.id}></div> \r\n    </li> `;\r\n    })\r\n    .join('');\r\n\r\n  refs.contactList.innerHTML = '';\r\n  refs.contactList.insertAdjacentHTML('beforeend', contacts);\r\n\r\n  makeBtnsDeleteUpdate();\r\n}\r\n\r\nfunction makeBtnsDeleteUpdate() {\r\n  const btnsDelete = refs.contactList.querySelectorAll('.delete');\r\n  const btnsUpdate = refs.contactList.querySelectorAll('.add');\r\n\r\n  btnsDelete.forEach(btnDelete =>\r\n    btnDelete.addEventListener('click', btnDeleteContactHandler),\r\n  );\r\n\r\n  btnsUpdate.forEach(btnUpdate => {\r\n    btnUpdate.addEventListener('click', event =>\r\n      btnUpdateHandler(event, btnUpdate),\r\n    );\r\n  });\r\n}\r\n\r\nfunction btnDeleteContactHandler(event) {\r\n  const contactForDeleteId = event.target.dataset.id;\r\n\r\n  deleteContact(contactForDeleteId)\r\n    .then(\r\n      () =>\r\n        (allContacts = allContacts.filter(\r\n          contact => contact.id !== contactForDeleteId,\r\n        )),\r\n    )\r\n    .then(render)\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nfunction btnUpdateHandler(event, btnUpdate) {\r\n  btnUpdate.classList.add('is-hidden');\r\n\r\n  const contactForAddId = event.target.dataset.id;\r\n  const markupUpdateForm = `\r\n        <input type=\"text\" class=\"update-name\" />\r\n        <input type=\"text\" class=\"update-number\" />\r\n        <button class=\"save\">Save</button>\r\n      `;\r\n\r\n  const selectedContact = allContacts.find(\r\n    contact => contact.id === contactForAddId,\r\n  );\r\n\r\n  // console.log('selectedContact', selectedContact);\r\n  const formsUpdate = refs.contactList.querySelectorAll('.update-form-wrapper');\r\n\r\n  formsUpdate.forEach(formUpdate => {\r\n    if (formUpdate.dataset.id === contactForAddId) {\r\n      const selectedFormUpdate = formUpdate;\r\n\r\n      selectedFormUpdate.insertAdjacentHTML('beforeend', markupUpdateForm);\r\n\r\n      const updateName = formUpdate.querySelector('.update-name');\r\n      const updateNumber = formUpdate.querySelector('.update-number');\r\n      const contactName = refs.contactList.querySelector(\r\n        `.contact-name-${contactForAddId}`,\r\n      );\r\n      const contactNumber = refs.contactList.querySelector(\r\n        `.contact-number-${contactForAddId}`,\r\n      );\r\n      const btnSave = formUpdate.querySelector('.save');\r\n\r\n      const fields = {};\r\n\r\n      updateName.addEventListener('input', () => {\r\n        const newName = updateName.value;\r\n\r\n        contactName.textContent = newName;\r\n        fields.name = contactName.textContent;\r\n      });\r\n      updateNumber.addEventListener('input', () => {\r\n        const newNumber = updateNumber.value;\r\n\r\n        contactNumber.textContent = newNumber;\r\n        fields.number = contactNumber.textContent;\r\n      });\r\n\r\n      btnSave.addEventListener('click', () => {\r\n        updateContact(contactForAddId, fields)\r\n          .then(contact => (contact = { ...selectedContact, contact }))\r\n          .then(getContacts)\r\n          .then(data => (allContacts = data))\r\n          .then(render)\r\n          .catch(error => console.log(error));\r\n      });\r\n    }\r\n  });\r\n}\r\n"],"sourceRoot":""}