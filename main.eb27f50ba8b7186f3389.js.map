{"version":3,"sources":["webpack:///./js/api.js","webpack:///./js/refs.js","webpack:///./js/toggle-classlist.js","webpack:///./index.js"],"names":["axios","defaults","baseURL","setToken","token","headers","common","signUp","userData","post","response","data","login","logout","addContact","payload","getContacts","get","deleteContact","id","delete","updateContact","fields","patch","refs","formSignUp","document","querySelector","btnSignUp","btnLogin","btnLogout","name","email","contactForm","contactList","content","toggleClassList","inputName","btnFormSignup","btnFormLogin","onClickBtnSignup","this","classList","remove","add","onClickBtnLogin","onClickBtnLogout","allContacts","render","contacts","map","contact","number","join","innerHTML","insertAdjacentHTML","btnsDelete","querySelectorAll","btnsAdd","formsUpdate","forEach","btnDelete","addEventListener","deleteContactHandler","btnAdd","event","contactForAddId","target","dataset","selectedContact","find","console","log","formUpdate","updateName","updateNumber","contactName","contactNumber","btnSave","newName","value","textContent","newNumber","then","catch","error","signupHandler","preventDefault","userDataSignup","elements","name_signup","email_signup","password","psw_signup","user","reset","loginFunc","loginHandler","userDataLogin","contactForDeleteId","filter","message","alert","removeEventListener","push"],"mappings":"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","file":"main.eb27f50ba8b7186f3389.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\nconst setToken = token => {\r\n  axios.defaults.headers.common['Authorization'] = token;\r\n};\r\n\r\n/* ==================== async/await ==================== */\r\nexport const signUp = async userData => {\r\n  try {\r\n    const response = await axios.post('/users/signup', userData);\r\n    const data = await response.data;\r\n    setToken(data.token);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const login = async userData => {\r\n  try {\r\n    const response = await axios.post('/users/login', userData);\r\n    const data = await response.data;\r\n    setToken(data.token);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const response = await axios.post('/users/logout');\r\n\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addContact = async payload => {\r\n  try {\r\n    const response = await axios.post('/contacts', payload);\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const response = await axios.get('/contacts');\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteContact = async id => {\r\n  try {\r\n    const response = await axios.delete(`/contacts/${id}`);\r\n\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateContact = async (id, fields) => {\r\n  try {\r\n    const response = await axios.patch(`/contacts/${id}`, fields);\r\n    const data = await response.data;\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* ==================== axios ==================== */\r\n// export const signUp = userData =>\r\n//   axios.post('/users/signup', userData).then(({ data }) => {\r\n//     setToken(data.token);\r\n\r\n//     return data;\r\n//   });\r\n\r\n// export const login = userData =>\r\n//   axios.post('/users/login', userData).then(({ data }) => {\r\n//     setToken(data.token);\r\n\r\n//     return data;\r\n//   });\r\n\r\n// export const logout = () => axios.post('/users/logout');\r\n\r\n// export const addContact = payload =>\r\n//   axios.post('/contacts', payload).then(({ data }) => data);\r\n\r\n// export const getContacts = () =>\r\n//   axios.get('/contacts').then(({ data }) => data);\r\n\r\n// export const deleteContact = id => axios.delete(`/contacts/${id}`);\r\n\r\n// export const updateContact = (id, fields) =>\r\n//   axios.patch(`/contacts/${id}`, fields).then(({ data }) => data);\r\n\r\n/* ==================== CRUD ==================== */\r\n// let token = '';\r\n// const setToken = loadedToken => (token = loadedToken);\r\n\r\n// const baseUrl = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\n// export const signUp = userData =>\r\n//   fetch(`${baseUrl}/users/signup`, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify(userData),\r\n//   })\r\n//     .then(res => res.json())\r\n//     .then(data => {\r\n//       setToken(data.token);\r\n\r\n//       return data;\r\n//     });\r\n\r\n// export const login = userData =>\r\n//   fetch(`${baseUrl}/users/login`, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//     },\r\n//     body: JSON.stringify(userData),\r\n//   })\r\n//     .then(res => res.json())\r\n//     .then(data => {\r\n//       setToken(data.token);\r\n\r\n//       return data;\r\n//     });\r\n\r\n// export const logout = () =>\r\n//   fetch(`${baseUrl}/users/logout`, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: token,\r\n//     },\r\n//   }).then(res => res.json());\r\n\r\n// export const addContact = ({ name, number }) =>\r\n//   fetch(`${baseUrl}/contacts`, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       Authorization: token,\r\n//     },\r\n//     body: JSON.stringify({ name, number }),\r\n//   }).then(res => res.json());\r\n\r\n// export const getContacts = () =>\r\n//   fetch(`${baseUrl}/contacts`, {\r\n//     headers: {\r\n//       Authorization: token,\r\n//     },\r\n//   }).then(res => res.json());\r\n\r\n// export const deleteContact = id =>\r\n//   fetch(`${baseUrl}/contacts/${id}`, {\r\n//     method: 'delete',\r\n//     headers: {\r\n//       Authorization: token,\r\n//     },\r\n//   }).then(res => res.json());\r\n\r\n// export const updateContact = (id, fields) =>\r\n//   fetch(`${baseUrl}/contacts/${id}`, {\r\n//     method: 'PATCH',\r\n//     headers: {\r\n//       'Content-Type': 'application/json; charset=UTF-8',\r\n//       Authorization: token,\r\n//     },\r\n//     body: JSON.stringify(fields),\r\n//   })\r\n//     .then(res => res.json())\r\n//     .then(console.log)\r\n//     .catch(error => console.log('error ', error));\r\n","const refs = {\r\n  formSignUp: document.querySelector('.form-signup'),\r\n\r\n  btnSignUp: document.querySelector('.signup'),\r\n  btnLogin: document.querySelector('.login'),\r\n  btnLogout: document.querySelector('.logout'),\r\n\r\n  name: document.querySelector('.name'),\r\n  email: document.querySelector('.email'),\r\n\r\n  contactForm: document.querySelector('.form'),\r\n  contactList: document.querySelector('.list'),\r\n  content: document.querySelector('.content'),\r\n};\r\n\r\nexport default refs;\r\n","import refs from './refs';\r\n\r\nconst toggleClassList = {\r\n  inputName: refs.formSignUp.querySelector('.input-name-signup'),\r\n  btnFormSignup: refs.formSignUp.querySelector('.btn-form-signup'),\r\n  btnFormLogin: refs.formSignUp.querySelector('.btn-form-login'),\r\n\r\n  onClickBtnSignup() {\r\n    this.inputName.classList.remove('is-hidden');\r\n    this.btnFormSignup.classList.remove('is-hidden');\r\n\r\n    refs.formSignUp.classList.remove('is-hidden');\r\n    refs.btnSignUp.classList.add('is-hidden');\r\n    refs.btnLogin.classList.add('is-hidden');\r\n  },\r\n\r\n  onClickBtnLogin() {\r\n    this.btnFormLogin.classList.remove('is-hidden');\r\n\r\n    refs.formSignUp.classList.remove('is-hidden');\r\n    refs.btnSignUp.classList.add('is-hidden');\r\n    refs.btnLogin.classList.add('is-hidden');\r\n  },\r\n\r\n  onClickBtnLogout() {\r\n    this.inputName.classList.add('is-hidden');\r\n    this.btnFormSignup.classList.add('is-hidden');\r\n    this.btnFormLogin.classList.add('is-hidden');\r\n    refs.content.classList.add('is-hidden');\r\n    refs.formSignUp.classList.add('is-hidden');\r\n    refs.btnSignUp.classList.remove('is-hidden');\r\n    refs.btnLogin.classList.remove('is-hidden');\r\n  },\r\n};\r\n\r\nexport default toggleClassList;\r\n","import './styles.css';\r\nimport {\r\n  signUp,\r\n  login,\r\n  logout,\r\n  addContact,\r\n  getContacts,\r\n  deleteContact,\r\n  updateContact,\r\n} from './js/api';\r\nimport refs from './js/refs';\r\nimport toggleClassList from './js/toggle-classlist';\r\n\r\nlet allContacts = [];\r\n\r\nfunction render() {\r\n  const contacts = allContacts\r\n    .map(contact => {\r\n      return `<li>\r\n    <span class=\"contact-name-${contact.id}\">${contact.name}</span>: <span class=\"contact-number-${contact.id}\">${contact.number}</span>\r\n    <button class=\"delete\" data-id=${contact.id}>Delete</button>\r\n    <button class=\"add\" data-id=${contact.id}>Update</button>\r\n    <div class=\"update-form-wrapper\" data-id=${contact.id}></div> \r\n    </li> `;\r\n    })\r\n    .join('');\r\n\r\n  refs.contactList.innerHTML = '';\r\n  refs.contactList.insertAdjacentHTML('beforeend', contacts);\r\n\r\n  const btnsDelete = refs.contactList.querySelectorAll('.delete');\r\n  const btnsAdd = refs.contactList.querySelectorAll('.add');\r\n  const formsUpdate = refs.contactList.querySelectorAll('.update-form-wrapper');\r\n\r\n  btnsDelete.forEach(btnDelete =>\r\n    btnDelete.addEventListener('click', deleteContactHandler),\r\n  );\r\n\r\n  btnsAdd.forEach(btnAdd => {\r\n    btnAdd.addEventListener('click', event => {\r\n      btnAdd.classList.add('is-hidden');\r\n      // console.dir(event.target);\r\n      const contactForAddId = event.target.dataset.id;\r\n      const markupUpdateForm = `\r\n        <input type=\"text\" class=\"update-name\" />\r\n        <input type=\"text\" class=\"update-number\" />\r\n        <button class=\"save\">Save</button>\r\n      `;\r\n\r\n      const selectedContact = allContacts.find(\r\n        contact => contact.id === contactForAddId,\r\n      );\r\n\r\n      console.log('selectedContact', selectedContact);\r\n      // console.log('formsUpdate', formsUpdate);\r\n\r\n      formsUpdate.forEach(formUpdate => {\r\n        // console.log(formUpdate.dataset.id);\r\n\r\n        if (formUpdate.dataset.id === contactForAddId) {\r\n          const selectedFormUpdate = formUpdate;\r\n          // console.log('formUpdate', formUpdate);\r\n\r\n          selectedFormUpdate.insertAdjacentHTML('beforeend', markupUpdateForm);\r\n\r\n          const updateName = formUpdate.querySelector('.update-name');\r\n          const updateNumber = formUpdate.querySelector('.update-number');\r\n          const contactName = refs.contactList.querySelector(\r\n            `.contact-name-${contactForAddId}`,\r\n          );\r\n          const contactNumber = refs.contactList.querySelector(\r\n            `.contact-number-${contactForAddId}`,\r\n          );\r\n          const btnSave = formUpdate.querySelector('.save');\r\n          // console.log('contactName', contactName);\r\n          // console.log('contactNumber', contactNumber);\r\n\r\n          const fields = {};\r\n\r\n          updateName.addEventListener('input', event => {\r\n            const newName = updateName.value;\r\n            // console.log(newName);\r\n            contactName.textContent = newName;\r\n            fields.name = contactName.textContent;\r\n          });\r\n          updateNumber.addEventListener('input', event => {\r\n            const newNumber = updateNumber.value;\r\n            // console.log(newNumber);\r\n            contactNumber.textContent = newNumber;\r\n            fields.number = contactNumber.textContent;\r\n          });\r\n\r\n          btnSave.addEventListener('click', () => {\r\n            // console.log('fields', fields);\r\n\r\n            updateContact(contactForAddId, fields)\r\n              .then(contact => (contact = { ...selectedContact, contact }))\r\n              .then(getContacts)\r\n              .then(data => (allContacts = data))\r\n              .then(render)\r\n              .catch(error => console.log(error));\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nrefs.btnSignUp.addEventListener('click', () => {\r\n  toggleClassList.onClickBtnSignup();\r\n\r\n  refs.formSignUp.addEventListener('submit', signupHandler);\r\n});\r\n\r\nrefs.btnLogin.addEventListener('click', () => {\r\n  toggleClassList.onClickBtnLogin();\r\n\r\n  refs.formSignUp.addEventListener('submit', loginHandler);\r\n});\r\n\r\nrefs.btnLogout.addEventListener('click', logOutHandler);\r\n\r\nrefs.contactForm.addEventListener('submit', contactFormHandler);\r\n\r\n/* ==================== CRUD ==================== */\r\nfunction signupHandler(event) {\r\n  event.preventDefault();\r\n\r\n  const nameSignup = event.target.elements.name_signup.value;\r\n  const emailSignup = event.target.elements.email_signup.value;\r\n  const pswSignup = event.target.elements.psw_signup.value;\r\n\r\n  const userDataSignup = {\r\n    name: nameSignup,\r\n    email: emailSignup,\r\n    password: pswSignup,\r\n  };\r\n\r\n  signUp(userDataSignup)\r\n    .then(({ user }) => {\r\n      refs.name.textContent = user.name;\r\n      refs.email.textContent = user.email;\r\n\r\n      refs.formSignUp.classList.add('is-hidden');\r\n      refs.content.classList.remove('is-hidden');\r\n\r\n      refs.formSignUp.reset();\r\n    })\r\n    .then(loginFunc(userDataSignup))\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nfunction loginHandler(event) {\r\n  event.preventDefault();\r\n\r\n  const emailLogin = event.target.elements.email_signup.value;\r\n  const pswLogin = event.target.elements.psw_signup.value;\r\n\r\n  const userDataLogin = {\r\n    email: emailLogin,\r\n    password: pswLogin,\r\n  };\r\n\r\n  loginFunc(userDataLogin);\r\n}\r\n\r\nfunction loginFunc(userDataLogin) {\r\n  login(userDataLogin)\r\n    .then(({ user }) => {\r\n      refs.name.textContent = user.name;\r\n      refs.email.textContent = user.email;\r\n\r\n      refs.formSignUp.classList.add('is-hidden');\r\n      refs.content.classList.remove('is-hidden');\r\n\r\n      refs.formSignUp.reset();\r\n    })\r\n    .then(getContacts)\r\n    .then(data => (allContacts = data))\r\n    .then(render)\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nfunction logOutHandler() {\r\n  logout()\r\n    .then(data => {\r\n      if (data.message === 'Please authenticate') {\r\n        alert('Пожалуйста, войдите или зарегестрируйтесь');\r\n      }\r\n      // console.log(data);\r\n\r\n      refs.name.textContent = '';\r\n      refs.email.textContent = '';\r\n      refs.contactList.innerHTML = '';\r\n\r\n      toggleClassList.onClickBtnLogout();\r\n\r\n      refs.formSignUp.removeEventListener('submit', signupHandler);\r\n      refs.formSignUp.removeEventListener('submit', loginHandler);\r\n      // refs.formSignUp.reset();\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nfunction contactFormHandler(event) {\r\n  event.preventDefault();\r\n\r\n  let name = event.target.elements.name.value;\r\n  let number = event.target.elements.number.value;\r\n\r\n  const newContact = { name, number };\r\n\r\n  addContact(newContact)\r\n    .then(contact => allContacts.push(contact))\r\n    .then(render)\r\n    .then(() => {\r\n      refs.contactForm.reset();\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nfunction deleteContactHandler(event) {\r\n  const contactForDeleteId = event.target.dataset.id;\r\n\r\n  deleteContact(contactForDeleteId)\r\n    .then(\r\n      () =>\r\n        (allContacts = allContacts.filter(\r\n          contact => contact.id !== contactForDeleteId,\r\n        )),\r\n    )\r\n    .then(render)\r\n    .catch(error => console.log(error));\r\n}\r\n"],"sourceRoot":""}