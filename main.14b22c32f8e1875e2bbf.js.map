{"version":3,"sources":["webpack:///./js/api.js","webpack:///./index.js"],"names":["token","setToken","loadedToken","baseUrl","getContacts","fetch","headers","Authorization","then","res","json","refs","formSignUp","document","querySelector","btnSignUp","btnLogin","btnLogout","name","email","contactForm","contactList","content","allContacts","render","contacts","map","contact","id","number","join","innerHTML","insertAdjacentHTML","btnsDelete","querySelectorAll","btnsAdd","formsUpdate","forEach","btnDelete","addEventListener","deleteContactHandler","btnAdd","event","classList","add","contactForAddId","target","dataset","selectedContact","find","console","log","formUpdate","updateName","updateNumber","contactName","contactNumber","btnSave","fields","newName","value","textContent","newNumber","method","body","JSON","stringify","catch","error","updateContact","data","contactForDeleteId","filter","toggleClassList","inputName","btnFormSignup","btnFormLogin","onClickBtnSignup","this","remove","onClickBtnLogin","onClickBtnLogout","signupHandler","preventDefault","userData","nameSignup","elements","name_signup","emailSignup","email_signup","pswSignup","psw_signup","password","user","reset","loginHandler","emailLogin","pswLogin","message","alert","removeEventListener","addContact","push"],"mappings":"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","file":"main.14b22c32f8e1875e2bbf.js","sourcesContent":["let token = '';\r\nconst setToken = loadedToken => (token = loadedToken);\r\n\r\nconst baseUrl = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nexport const signUp = userData =>\r\n  fetch(`${baseUrl}/users/signup`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      setToken(token);\r\n\r\n      return data;\r\n    });\r\n\r\nexport const login = userData =>\r\n  fetch(`${baseUrl}/users/login`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      setToken(data.token);\r\n\r\n      return data;\r\n    });\r\n\r\nexport const logout = () =>\r\n  fetch(`${baseUrl}/users/logout`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: token,\r\n    },\r\n  }).then(res => res.json());\r\n\r\nexport const addContact = ({ name, number }) =>\r\n  fetch(`${baseUrl}/contacts`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: token,\r\n    },\r\n    body: JSON.stringify({ name, number }),\r\n  }).then(res => res.json());\r\n\r\nexport const getContacts = () =>\r\n  fetch(`${baseUrl}/contacts`, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  }).then(res => res.json());\r\n\r\nexport const deleteContact = id =>\r\n  fetch(`${baseUrl}/contacts/${id}`, {\r\n    method: 'delete',\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  }).then(res => res.json());\r\n\r\nexport const updateContact = (id, fields) =>\r\n  fetch(`${baseUrl}/contacts/${id}`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n      Authorization: token,\r\n    },\r\n    body: JSON.stringify(fields),\r\n  })\r\n    .then(res => res.json())\r\n    .then(console.log)\r\n    .catch(error => console.log('error ', error));\r\n","import './styles.css';\r\nimport {\r\n  signUp,\r\n  login,\r\n  logout,\r\n  addContact,\r\n  getContacts,\r\n  deleteContact,\r\n  updateContact,\r\n} from './js/api';\r\n\r\nconst refs = {\r\n  formSignUp: document.querySelector('.form-signup'),\r\n\r\n  // formLogin: document.querySelector('.form-login'),\r\n\r\n  btnSignUp: document.querySelector('.signup'),\r\n  btnLogin: document.querySelector('.login'),\r\n  btnLogout: document.querySelector('.logout'),\r\n\r\n  name: document.querySelector('.name'),\r\n  email: document.querySelector('.email'),\r\n\r\n  contactForm: document.querySelector('.form'),\r\n  contactList: document.querySelector('.list'),\r\n  content: document.querySelector('.content'),\r\n};\r\n\r\nlet allContacts = [];\r\n\r\nfunction render() {\r\n  const contacts = allContacts\r\n    .map(contact => {\r\n      return `<li>\r\n    <span class=\"contact-name-${contact.id}\">${contact.name}</span>: <span class=\"contact-number-${contact.id}\">${contact.number}</span>\r\n    <button class=\"delete\" data-id=${contact.id}>Delete</button>\r\n    <button class=\"add\" data-id=${contact.id}>Update</button>\r\n    <div class=\"update-form-wrapper\" data-id=${contact.id}></div> \r\n    </li> `;\r\n    })\r\n    .join('');\r\n\r\n  refs.contactList.innerHTML = '';\r\n  refs.contactList.insertAdjacentHTML('beforeend', contacts);\r\n\r\n  const btnsDelete = refs.contactList.querySelectorAll('.delete');\r\n  const btnsAdd = refs.contactList.querySelectorAll('.add');\r\n  const formsUpdate = refs.contactList.querySelectorAll('.update-form-wrapper');\r\n\r\n  btnsDelete.forEach(btnDelete =>\r\n    btnDelete.addEventListener('click', deleteContactHandler),\r\n  );\r\n\r\n  btnsAdd.forEach(btnAdd => {\r\n    btnAdd.addEventListener('click', event => {\r\n      btnAdd.classList.add('is-hidden');\r\n      // console.dir(event.target);\r\n      const contactForAddId = event.target.dataset.id;\r\n      const markupUpdateForm = `\r\n        <input type=\"text\" class=\"update-name\" />\r\n        <input type=\"text\" class=\"update-number\" />\r\n        <button class=\"save\">Save</button>\r\n      `;\r\n\r\n      const selectedContact = allContacts.find(\r\n        contact => contact.id === contactForAddId,\r\n      );\r\n\r\n      console.log('selectedContact', selectedContact);\r\n      // console.log('formsUpdate', formsUpdate);\r\n\r\n      formsUpdate.forEach(formUpdate => {\r\n        // console.log(formUpdate.dataset.id);\r\n\r\n        if (formUpdate.dataset.id === contactForAddId) {\r\n          const selectedFormUpdate = formUpdate;\r\n          // console.log('formUpdate', formUpdate);\r\n\r\n          selectedFormUpdate.insertAdjacentHTML('beforeend', markupUpdateForm);\r\n\r\n          const updateName = formUpdate.querySelector('.update-name');\r\n          const updateNumber = formUpdate.querySelector('.update-number');\r\n          const contactName = refs.contactList.querySelector(\r\n            `.contact-name-${contactForAddId}`,\r\n          );\r\n          const contactNumber = refs.contactList.querySelector(\r\n            `.contact-number-${contactForAddId}`,\r\n          );\r\n          const btnSave = formUpdate.querySelector('.save');\r\n          // console.log('contactName', contactName);\r\n          // console.log('contactNumber', contactNumber);\r\n\r\n          const fields = {};\r\n\r\n          updateName.addEventListener('input', event => {\r\n            const newName = updateName.value;\r\n            // console.log(newName);\r\n            contactName.textContent = newName;\r\n            fields.name = contactName.textContent;\r\n          });\r\n          updateNumber.addEventListener('input', event => {\r\n            const newNumber = updateNumber.value;\r\n            // console.log(newNumber);\r\n            contactNumber.textContent = newNumber;\r\n            fields.number = contactNumber.textContent;\r\n          });\r\n\r\n          btnSave.addEventListener('click', () => {\r\n            // console.log('fields', fields);\r\n\r\n            updateContact(contactForAddId, fields)\r\n              .then(contact => (contact = { ...selectedContact, contact }))\r\n              .then(getContacts)\r\n              .then(data => (allContacts = data))\r\n              .then(render);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction deleteContactHandler(event) {\r\n  const contactForDeleteId = event.target.dataset.id;\r\n\r\n  deleteContact(contactForDeleteId)\r\n    .then(\r\n      () =>\r\n        (allContacts = allContacts.filter(\r\n          contact => contact.id !== contactForDeleteId,\r\n        )),\r\n    )\r\n    .then(render);\r\n}\r\n\r\nconst toggleClassList = {\r\n  inputName: refs.formSignUp.querySelector('.input-name-signup'),\r\n  btnFormSignup: refs.formSignUp.querySelector('.btn-form-signup'),\r\n  btnFormLogin: refs.formSignUp.querySelector('.btn-form-login'),\r\n\r\n  onClickBtnSignup() {\r\n    this.inputName.classList.remove('is-hidden');\r\n    this.btnFormSignup.classList.remove('is-hidden');\r\n\r\n    refs.formSignUp.classList.remove('is-hidden');\r\n    refs.btnSignUp.classList.add('is-hidden');\r\n    refs.btnLogin.classList.add('is-hidden');\r\n  },\r\n\r\n  onClickBtnLogin() {\r\n    this.btnFormLogin.classList.remove('is-hidden');\r\n\r\n    refs.formSignUp.classList.remove('is-hidden');\r\n    refs.btnSignUp.classList.add('is-hidden');\r\n    refs.btnLogin.classList.add('is-hidden');\r\n  },\r\n\r\n  onClickBtnLogout() {\r\n    this.inputName.classList.add('is-hidden');\r\n    this.btnFormSignup.classList.add('is-hidden');\r\n    this.btnFormLogin.classList.add('is-hidden');\r\n    refs.content.classList.add('is-hidden');\r\n    refs.formSignUp.classList.add('is-hidden');\r\n    refs.btnSignUp.classList.remove('is-hidden');\r\n    refs.btnLogin.classList.remove('is-hidden');\r\n  },\r\n};\r\n\r\nrefs.btnSignUp.addEventListener('click', () => {\r\n  toggleClassList.onClickBtnSignup();\r\n\r\n  refs.formSignUp.addEventListener('submit', signupHandler);\r\n});\r\nrefs.btnLogin.addEventListener('click', () => {\r\n  toggleClassList.onClickBtnLogin();\r\n\r\n  refs.formSignUp.addEventListener('submit', loginHandler);\r\n});\r\nrefs.btnLogout.addEventListener('click', logOutHandler);\r\nrefs.contactForm.addEventListener('submit', contactFormHandler);\r\n\r\nfunction signupHandler(event) {\r\n  event.preventDefault();\r\n\r\n  const nameSignup = event.target.elements.name_signup.value;\r\n  const emailSignup = event.target.elements.email_signup.value;\r\n  const pswSignup = event.target.elements.psw_signup.value;\r\n\r\n  const userDataSignup = {\r\n    name: nameSignup,\r\n    email: emailSignup,\r\n    password: pswSignup,\r\n  };\r\n\r\n  signUp(userDataSignup).then(({ user }) => {\r\n    refs.name.textContent = user.name;\r\n    refs.email.textContent = user.email;\r\n\r\n    refs.formSignUp.classList.add('is-hidden');\r\n    refs.content.classList.remove('is-hidden');\r\n\r\n    refs.formSignUp.reset();\r\n  });\r\n}\r\n\r\nfunction loginHandler(event) {\r\n  event.preventDefault();\r\n\r\n  const emailLogin = event.target.elements.email_signup.value;\r\n  const pswLogin = event.target.elements.psw_signup.value;\r\n\r\n  const userDataLogin = {\r\n    email: emailLogin,\r\n    password: pswLogin,\r\n  };\r\n\r\n  login(userDataLogin)\r\n    .then(({ user }) => {\r\n      refs.name.textContent = user.name;\r\n      refs.email.textContent = user.email;\r\n\r\n      refs.formSignUp.classList.add('is-hidden');\r\n      refs.content.classList.remove('is-hidden');\r\n\r\n      refs.formSignUp.reset();\r\n    })\r\n    .then(getContacts)\r\n    .then(data => (allContacts = data))\r\n    .then(render);\r\n}\r\n\r\nfunction logOutHandler() {\r\n  logout().then(data => {\r\n    if (data.message === 'Please authenticate') {\r\n      alert('Пожалуйста, войдите или зарегестрируйтесь');\r\n    }\r\n    // console.log(data);\r\n\r\n    refs.name.textContent = '';\r\n    refs.email.textContent = '';\r\n\r\n    toggleClassList.onClickBtnLogout();\r\n\r\n    refs.formSignUp.removeEventListener('submit', signupHandler);\r\n    refs.formSignUp.removeEventListener('submit', loginHandler);\r\n    // refs.formSignUp.reset();\r\n  });\r\n}\r\n\r\nfunction contactFormHandler(event) {\r\n  event.preventDefault();\r\n\r\n  let name = event.target.elements.name.value;\r\n  let number = event.target.elements.number.value;\r\n\r\n  const newContact = { name, number };\r\n\r\n  addContact(newContact)\r\n    .then(contact => allContacts.push(contact))\r\n    .then(render)\r\n    .then(() => {\r\n      refs.contactForm.reset();\r\n    });\r\n}\r\n"],"sourceRoot":""}